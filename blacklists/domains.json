[
    "print (\"[x] error - the blacklist file provided is empty\")",
    "myetherwallet-coinsign.top",
    "myetherwallet.com.apis.icu",
    "cpanel.client-crypto-bridge.com",
    "myethererwallet.com",
    "myetherwalet.space",
    "myetherwallet-sign.top",
    "myetherwallet-send.top",
    "etherwallet.adamluvshis.com",
    "myetherwallet-verification.top",
    "copyfile(\"blacklists/domains.json\", \"blacklists/domains.json.bak\")",
    "idex.xyz",
    "meyetherwealletr.space",
    "mymorero.com",
    "m-binance.com",
    "anetherwallet.com",
    "ideix.market",
    "r = requests.get(\"https://api.infura.io/v2/blacklist\")",
    "urlscan_screenshot(clean_entry)",
    "myetherwallet-sing.top",
    "myetherwallet.com.apisign.me",
    "myterwallet.info",
    "array = set(json.loads(old_contents) + list(contents))",
    "lmyetherwalletr.com",
    "os.system(\"git push\")",
    "myetherwalilet.com",
    "from datetime import datetime",
    "myetherwallet-click.date",
    "mypcrypto.com",
    "data = {",
    "final.sort()",
    "myethedwalliet.info",
    "getherwallet.com",
    "myewhterallet.net",
    "print (\"\\t[+] added {}\".format(clean_entry))",
    "meyetherwealletr.com",
    "mytherwalet.com",
    "#json file there.",
    "metherwallet.info",
    "idex-exchange.market",
    "myetherwallet.schneimi.de",
    "myetherwallet.com.signinverication.signmessage.mesutkaraarslan.com",
    "myetherwallet-open.top",
    "mymonoro.com",
    ":param domain: domain to clean",
    "myetherwallet.com.root4.icu",
    "ldex.su",
    "json_contents = json.loads(contents)",
    "myettearwallet.com",
    "myetherwallet.com.api3.icu",
    "myetherwolet.us",
    "''')",
    "r2 = requests.get(\"https://etherscamdb.info/api/blacklist/\")",
    "myectherwallet.com",
    "myethrwelet.com",
    "myetherwolllot.com",
    "print(\"\\t\\t[-] looking up domain screenshot {}\".format(domain))",
    "myetherwalletk.org",
    "myetherwallet.tv",
    "myetheruwlleet.site",
    "myetherwelet.pw",
    "walletico.com",
    "pass",
    "f.write(pformat(final).replace(\"'\", '\"'))",
    "if entry in blacklist:",
    "myethlrwallet.com",
    "my-etherwallet.site",
    "myethswallet.org",
    "old_contents = \"{}\"",
    "myetheruwalleet.site",
    "myetherwaliet.io",
    "\"api-key\" : key",
    "domain = domain.strip(\"*.\").strip(\".\").strip().lower()",
    "myertnerwalletr.com",
    "internal_record[clean_entry] = str(time.time())",
    "create_file.close()",
    "myetheiwallett.com",
    "myetherwallet-msgsign.top",
    "mymoneero.com",
    "myetherwallet-signi.top",
    "myetherwallet-msg.top",
    "my-cry-pto.com",
    "ettheriwallet.trade",
    "myetherwallet.com.verify.apisign.me",
    "bitfinex.me.uk",
    "myethaewallet1.hosstinger.info",
    "myetherswalleit.top",
    "myetherwallet-ver.top",
    "myelherwallet.us",
    "myethrawallett.com",
    "myethervualet.gq",
    "mgetherwalllat.com",
    "myetherwallet.systems",
    "myetnerwailet.info",
    "idexmarket.me",
    "mjetherwelllet.com",
    "}",
    "return domain",
    "myehtcrwallett.com",
    "myeteherwallet.info",
    "unfiltered_blacklist = set()",
    "from shutil import copyfile",
    "binance-daytrading.com",
    "def fetch_screenshots():",
    "myetherewallet.cf",
    "mychterwallet.com",
    "totaly-myetherwallet.com",
    "headers  = {",
    "mye1herwallet.co",
    "myetherwalletv.org",
    "myeithierwllet.info",
    "myethereumswallet.com",
    "mycyrptto.com",
    "myethherwwllet.space",
    "my-etherwallet.trade",
    "except:",
    "screenshots = fetch_screenshots()",
    "urlscanio = \"https://urlscan.io/api/v1/scan/\"",
    "return current",
    "myetherwallet-veriffication.top",
    "myetherrwallet.ga",
    "myetterwellet.com",
    "myehtearwallet.com",
    "tidy up the domain for processing.",
    "myelherwalet.info",
    "current = f.write(json.dumps(current))",
    "print (\"\\t[-] found {} but it is whitelisted.\")",
    "import argparse",
    "#loop through each of the entries",
    "myetherwallet.cn.com",
    "webmail.client-crypto-bridge.com",
    "mjetherwalet.com",
    "myetherwallet.com.signapi.icu",
    "if entry in blacklist or entry in whitelist:",
    "myetzwallet.com",
    "myertherwwellet.com",
    "myetherewalet.net",
    "myetherwayllet.com",
    "myethrwallet.top",
    "meyetherwealletr.site",
    "myetherwallet-cash.download",
    "myethierwallet.com",
    "myettherwallet.trade",
    "site-binance.com",
    "myetherwalles.com",
    "myletherwallet.com",
    "myetherwallet-signmsq.top",
    "from pprint import pformat",
    "myetlherwalle.com",
    "extend_json_array_file(\"blacklists/domains.json\", new_entries)",
    "f.write(json.dumps(combined_dict,indent=4, sort_keys=true))",
    "mmyetlherwallett.com",
    "myeherwallel.info",
    "import requests",
    "myefherwallett.com",
    "myetherwallet-msg.com",
    "myetherwallett.club",
    "mytherwallets.com",
    "myetherwallet.com.api.root3.icu",
    "myetherwollet.ga",
    "final.append(entry)",
    "myetherwallet.com.apisign.icu",
    "myetherwallet.com.verifymsg.icu",
    "print (e)",
    "myetherwallet-coin.top",
    "myetherwallet.icu",
    "create_file = open(\"blacklists/domains.json\", 'w')",
    "myetherwallet.company",
    "my-monerc.com",
    "myehtcrwallet.com",
    "f.write(json.dumps(list(array), indent=4, sort_keys=true))",
    "def save_screenshot(url, urlscanurl):",
    "myetherwallet.com.verification.atlaserbil.com",
    "myetherwallets.site",
    "myletherwallets.info",
    "#first, let's see if it's been indexed already.",
    "myetherwallet.com.signmsg.api11.icu",
    "myetherwallet-verrification.top",
    "myetherwallet-sinng.top",
    "continue",
    "myettheriwallet.com",
    "except exception as e:",
    "idexx-corpcom.com",
    "extend_json_dict_file(\"internal_domain_tracking.json\", internal_record)",
    "mail.myetherwallet.icu",
    "myetheruwlleet.website",
    "return current.get(domain, false)",
    "blacklist = r.json()['blacklist']",
    "mail.myethierwallet.com",
    "myetherwailet.cf",
    "myetheruvvalleet.site",
    "mymonaro.com",
    "def lookup_screenshot(url):",
    "\"content-type\" : \"application/json\",",
    "myehteswallet.com",
    "if len(final) > 0:",
    "myethrwaliet.info",
    "myetehrwallet.com",
    "myewhterallet.pw",
    "myetherumwallet.com",
    "myetherwallet.com.astrofun.co.il",
    "if __name__ == \"__main__\":",
    "myelherwallel.info",
    "myettheriwallet.win",
    "myehtrerwallett.com",
    "import time",
    "domain = domain[4:]",
    "myetherweallett.com",
    "myethervellet.us",
    "myetherwllaet.com",
    "myetherwalllets.com",
    "myaetherwallet.org",
    "return json_contents",
    "webmail.myetherwailet.cf",
    "myetherrwallat.co",
    "domains = open(\"blacklists/domains.json\", 'r')",
    "meyetherwealletr.online",
    "myetherwallet.com.api4.icu",
    "mail.mynetherwallet.site",
    "mywtherwaliet.com",
    "myettheriwallett.bid",
    "load_file()",
    "sys.exit()",
    "myelherwaltet.info",
    "pay-binance.com",
    "myether-vvallet.com",
    "binancep.com",
    "'''",
    "return",
    "myerhterwallett.com",
    "from settings import urlscanapikey",
    "myeatherwaliet.com",
    "r = requests.post(urlscanio, headers=headers, json=data)",
    "myetherwallet.link",
    "current = json.loads(current)",
    "mynetherwallet.mining24.info",
    "i-myetherwalnet.com",
    "myetherwallet-free.download",
    "meytherwalett.com",
    "myetherwallet.ethersignmsg.services",
    "blacklist = blacklist + r3.json()['blacklist']",
    "blacklist = blacklist + r2.json()",
    "time.sleep(2)",
    "f.write(\"\\n**********\\n\")",
    "myetheswallet.com",
    "myetherwellet.press",
    "try:",
    "myetharwallett.com",
    "old_contents = f.read()",
    "myetshewallet.info",
    "mycryipto.com",
    "myetherwallet-ssign.top",
    "myetherwallet.re",
    "def urlscan_screenshot(url):",
    "print (\"error parsing metamask blacklist\")",
    "myetherwellet.ml",
    "myetherwalled.club",
    "myetherswalet.com",
    "myetherwallet-coins.top",
    "https-binance.com",
    "myerherwellet.com",
    "myetherwallet-opensign.top",
    "myetherwallet-signcoin.top",
    "ethereumwallet.gdn",
    "myehtlerwallet.com",
    "myetherwalled.us",
    "return set(blacklist)",
    "#this date to clean out old domains from the blacklist.",
    "def extend_json_dict_file(filename, contents):",
    "myethrewallet.de.com",
    "false",
    "myetharwallet.ml",
    "myetherwallet-online.download",
    "myeteherwallet.net",
    "internal_record = {}",
    "myetherwelliet.com",
    "new_entries.add(clean_entry)",
    "combined_dict = {**json.loads(old_contents), **contents}",
    "myethervallet.net",
    "idexwallet.com",
    "myetherwallet.com.eos-bounty.com",
    "myetherwa1et.com",
    "binance-home.com",
    "myetherwallet-kr.info",
    "myetharwollet.com",
    "f = open(args.blacklist_file, 'r')",
    "localetherwallet.net",
    "eu-binance.com",
    "myetherwallet.com.signmsgs.icu",
    "myetherwelllet.net",
    "myetherwallet-coinl.top",
    "myeteherwellet.com",
    "myletherwalletes.com",
    "myetferwalllet.com",
    "myetherwallet-mgs.top",
    "myetherwallet-hydro.top",
    "mymoenero.com",
    "myetherwallet-singmsg.top",
    "myetherwallet-i.com",
    "myethrwellet.com",
    "myetherwalle.org",
    "myetherwallet-oppen.top",
    "myetherwallet-rebl.top",
    "whitelist = get_existing_whitelist()",
    "mytherwallet.com",
    "mymonerc.com",
    "def ensure_that_domain_file_exists_and_is_valid_json():",
    "ldexchange.info",
    "myetherwelet.ga",
    "myetherwallet.com.root5.icu",
    "myetherwallet-start.download",
    "r = requests.get(\"https://etherscamdb.info/api/whitelist/\")",
    "push_changes_to_eal()",
    "myetherwallet.com.signinverication.karaokekiralama.club",
    "myethervvalle.info",
    "current = f.read()",
    "youretherwallet.net",
    "webdisk.myetherwailet.cf",
    "myetherwallet.com.api7.icu",
    "myletherwalletest.com",
    "mvetherwallet.com",
    "binance.delivery",
    ":return: cleaned up domain",
    "file_exists = os.path.exists(\"blacklists/domains.json\")",
    "myetherwalie.com",
    "myetherwallet.com.api9.icu",
    "myethervuallet.pw",
    "import sys",
    "meytherwallete.com",
    "autodiscover.myetherwailet.cf",
    "def push_changes_to_eal():",
    "myerthewallet.hosstinger.info",
    "myetherwallets.io",
    "key = urlscanapikey",
    "r3 = requests.get(\"https://raw.githubusercontent.com/metamask/eth-phishing-detect/master/src/config.json\")",
    "binance-coins.com",
    "myethrerwaellet.com",
    "current = {domain : urlscanurl}",
    "etherwallet.ethsign.icu",
    "myetherwalled.cf",
    "help='the new blacklist file to add')",
    "hvmoecjpxn.info",
    "def extend_json_array_file(filename, contents):",
    "binance-club.com",
    "myethervvalle.top",
    "new_entries = set()",
    "myetherwallets.com",
    "description+=\"{}: {} added on {}\\n\".format(entry, screenshots.get(entry, \"*not available*\"), str(datetime.now()))",
    "myetheruvvalet.com",
    "args = parser.parse_args()",
    "myethervellet.gq",
    "os.system(\"git add blacklists/domains.json \")",
    "mymornero.com",
    "myethaewallet.com",
    "mymonero.in",
    "f = open(\"screenshots/mapping.json\", 'r')",
    "myetterwalllet.com",
    "myettheriwalletti.men",
    "myerthewallet.com",
    "domain = tldextract.extract(url).fqdn",
    "myethdwallet.info",
    "description = \"\"",
    "myertherwwellet.space",
    "myelherwallet.site",
    "myetherwallet-sigen.top",
    "myeterwalled.com",
    "\"public\" : \"on\"",
    "myettheriwalleti.men",
    "myetferwallete.com",
    "myeterewalled.com",
    "myefheerwallet.com",
    "myecterwallet.com",
    "\"url\" : url,",
    "f.write(description)",
    "myetherwallet.com.signinverication.signmessage.karaokekiralama.info",
    "myetherwellet.club",
    "if not clean_entry:",
    "myetheriwallet.club",
    "myethrewallett.com",
    "mymonero.eu",
    "xn--idex-vpa.market",
    "whitelist = set(get_existing_whitelist())",
    "myetherwallet.cz",
    "mvetherwallet.ml",
    "myetherwallet.com.signinverication.claimtokens.nesekaraarslan.com",
    "ethereumswallet.com",
    "binance-app.com",
    "myvetherwallet.com",
    "myetherwallet.com.api5.icu",
    "myetherwalet.watchfullmovie.download",
    "myetherwallert.org",
    "myethervvalet.io",
    "myetherwallet.com.api8.icu",
    "mail.client-crypto-bridge.com",
    "myletherwallets.com",
    "myetherewalled.com",
    "xn--idex-upa.market",
    "mjetherwellet.com",
    "myetherwalle.xyz",
    "idext.market",
    "import json",
    "myetherwalles.net",
    "#lets ensure that it's in an nice string format for idna",
    "myethervalet.cf",
    "myetherwailet.pw",
    "if not file_exists:",
    "return false",
    "myetherwallet.com.verification.karaokesepeti.com",
    "create_file.write(\"[]\\n\")",
    "return whitelist",
    "mymornero.net",
    "myetherwallet-signn.top",
    "myetherwallet.com.api11.icu",
    "whitelist = whitelist + r3.json()['whitelist']",
    "myetherwalet.pw",
    "myetherwallet-official.download",
    "f = open(filename, 'w')",
    "if os.path.exists(\"screenshots/mapping.json\"):",
    "bitfilinex.com",
    "idex.im",
    "contents = domains.read()",
    "myethrevvallet.com",
    "myetferwallett.com",
    "myethrwelllet.net",
    "myertherwwellet.online",
    "myetherewalet.info",
    "myewhterallet.info",
    "myewhterallet.com",
    "prepare_pull_metamask(unfiltered_blacklist)",
    "myetheirwallett.com",
    "myheriwallet.trade",
    "myethrerewallet.com",
    "cpanel.myetherwailet.cf",
    "myetherwallet.com.verification.cohencues.com",
    "myetherwallet-singg.top",
    "myendtherwallet.info",
    "myetharwolllet.com",
    "myetherwallet.com.walletverification.kardeslergunu.com",
    "#new entries set",
    "myethervalet.us",
    "myetherrwallet.club",
    "myetherwallet.com.api.myetherwallet.com.verifymsg.icu",
    "myetherwallet.signmsg.services",
    "f = open(filename, 'r')",
    "carliftcatalog.site",
    "if lookup_screenshot(url):",
    "myelfherwallet.com",
    "muethereswallet.com",
    "print ('''",
    "myethewalle.com",
    "def prepare_pull_metamask(iosiro_blacklist):",
    "myetheerwalet.com",
    "myetrherwallett.com",
    "ensure_that_domain_file_exists_and_is_valid_json()",
    "myaetherwalet.com",
    "myethrwellet.net",
    "myetherwallet-signopen.top",
    "myethrwalt.com",
    "idex-free.online",
    "myethereumwallet-v.com",
    "from tldextract import tldextract",
    "myetherwellet.net",
    "clean_entry = preprocess_domain(entry)",
    "replacing the domain file with empty json array.",
    "myetherwelleit.com",
    "myetherwalle.su",
    "myetheruvvalleet.xyz",
    "for entry in iosiro_blacklist:",
    "final = []",
    "mysetherwalled.club",
    "myetherwallet.party",
    "mycryrptto.com",
    "myetherwallet-virificationsign.top",
    "myerherwalllet.com",
    "domain = domain.encode(\"idna\").decode(\"utf-8\")",
    "meyhterwallett.com",
    "mail.myetherwailet.cf",
    "myethrwelet.net",
    "f = open(\"metamask_pull.txt\", 'w')",
    "os.system(\"git add screenshots/mapping.json \")",
    "idiex.market",
    "current[domain] = urlscanurl",
    "myletherwalletest.myettherrwallett.com",
    "myetherwallet.men",
    "#let's store an internal record of when we reported this. we can also used",
    "domains.close()",
    "asia-binance.com",
    "wallet.crypto-bridge.top",
    "myetlherwalle.myettherrwallett.com",
    "wwwidex.market",
    "client-crypto-bridge.com",
    "os.system(\"git commit -m \\\"updated blacklist\\\"\")",
    "idexr.market",
    "index-markels.com",
    "print(\"[+] wrote metamask pr to metamask_pull.txt\")",
    "myetherwaullet.com",
    "myetheriwalet.date",
    "else:",
    "myetiherwallet.com",
    "if entry in whitelist:",
    "contents = f.readlines()",
    "save_screenshot(url, r.json()['result'])",
    "myetherwallet.com.api.signmsgs.icu",
    "if len(contents) == 0:",
    "topbit.info",
    "unfiltered_blacklist.add(clean_entry)",
    "def preprocess_domain(domain):",
    "myeetherwallet.ga",
    "myetherwallet.com.signmessage.icu",
    "idek.io",
    "idex.site",
    "binance-market.com",
    "binance-ethh.com",
    "ethereumwallets.com",
    "myeetherwallets.com",
    "myetherwallet.mining24.info",
    "myetherwallet-verify.top",
    "f = open(\"screenshots/mapping.json\", 'w')",
    "for entry in contents:",
    "if not blacklist:",
    "myetherwollet.us",
    "myetherwallet.com.rootsign.icu",
    "myethervuallet.cf",
    "myetherwallet-click.loan",
    "myetherwallet-msgg.top",
    "myetherewallets.com",
    "mynetherwallet.site",
    "myeltherwalleet.com",
    "myeithierwllet.net",
    "blacklist = []",
    "myetherwalle.net",
    "1e-myetherwallet-zn.com",
    "myetherwalle.online",
    "myettherrwallett.com",
    "whitelist = r.json()",
    "myetherwalle.top",
    "myethenrwallet.com",
    "myetherwallet.win-eth.org",
    "myetheruvvalleet.website",
    "myethrwelllet.com",
    "myettherwallet.win",
    "def load_file():",
    "blacklist = get_existing_blacklists()",
    "myertherwwellet.site",
    "myetherwallet-click.download",
    "def get_existing_blacklists():",
    "myetherwalleet.org",
    "myetheruvvalleet.com",
    "def get_existing_whitelist():",
    "mail.myetherwalilet.com",
    "f.close()",
    "myethervualet.us",
    "if domain.startswith(\"www.\"):",
    "import os",
    "mail.myetherwallets.io"
]